diff --git a/build/pre-build.patch b/build/pre-build.patch
index a5a9e68..e69de29 100644
--- a/build/pre-build.patch
+++ b/build/pre-build.patch
@@ -1,119 +0,0 @@
-diff --git a/build/pre-build.patch b/build/pre-build.patch
-index 454ba30..e69de29 100644
---- a/build/pre-build.patch
-+++ b/build/pre-build.patch
-@@ -1,60 +0,0 @@
--Index: lib/backend/sodiumnative.js
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- lib/backend/sodiumnative.js	(date 1571539832000)
--+++ lib/backend/sodiumnative.js	(date 1571539892668)
--@@ -1,11 +1,5 @@
-- let loaded = false;
---let _sodium;
---try {
---    _sodium = require('sodium-native');
---    loaded = true;
---} catch (e) {
---    _sodium = {};
---}
--+let _sodium = {};
-- const Backend = require('../backend');
-- const CryptographyKey = require('../cryptography-key');
-- const SodiumError = require('../sodium-error');
--Index: lib/sodiumplus.js
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- lib/sodiumplus.js	(date 1571539832000)
--+++ lib/sodiumplus.js	(date 1571539922485)
--@@ -4,7 +4,6 @@
-- const Ed25519PublicKey = require('./keytypes/ed25519pk');
-- const LibsodiumWrappersBackend = require('./backend/libsodium-wrappers');
-- const SodiumError = require('./sodium-error');
---const SodiumNativeBackend = require('./backend/sodiumnative');
-- const X25519PublicKey = require('./keytypes/x25519pk');
-- const X25519SecretKey = require('./keytypes/x25519sk');
-- const Util = require('./util');
--@@ -38,7 +37,7 @@
--      * @return {boolean}
--      */
--     isSodiumNative() {
---        return (this.backend instanceof SodiumNativeBackend);
--+        return false;
--     }
-- 
--     /**
--@@ -58,14 +57,7 @@
--      */
--     static async auto() {
--         let backend;
---        try {
---            backend = await SodiumNativeBackend.init();
---        } catch (e) {
---            backend = await LibsodiumWrappersBackend.init();
---        }
---        if (!backend) {
---            backend = await LibsodiumWrappersBackend.init();
---        }
--+        backend = await LibsodiumWrappersBackend.init();
--         Util.populateConstants(backend);
--         return new SodiumPlus(backend);
--     }
-diff --git a/lib/backend/sodiumnative.js b/lib/backend/sodiumnative.js
-index 6b725d2..504e46a 100644
---- a/lib/backend/sodiumnative.js
-+++ b/lib/backend/sodiumnative.js
-@@ -1,11 +1,5 @@
- let loaded = false;
--let _sodium;
--try {
--    _sodium = require('sodium-native');
--    loaded = true;
--} catch (e) {
--    _sodium = {};
--}
-+let _sodium = {};
- const Backend = require('../backend');
- const CryptographyKey = require('../cryptography-key');
- const SodiumError = require('../sodium-error');
-diff --git a/lib/sodiumplus.js b/lib/sodiumplus.js
-index 4e3d33c..de2ffe5 100644
---- a/lib/sodiumplus.js
-+++ b/lib/sodiumplus.js
-@@ -4,7 +4,6 @@ const Ed25519SecretKey = require('./keytypes/ed25519sk');
- const Ed25519PublicKey = require('./keytypes/ed25519pk');
- const LibsodiumWrappersBackend = require('./backend/libsodium-wrappers');
- const SodiumError = require('./sodium-error');
--const SodiumNativeBackend = require('./backend/sodiumnative');
- const X25519PublicKey = require('./keytypes/x25519pk');
- const X25519SecretKey = require('./keytypes/x25519sk');
- const Util = require('./util');
-@@ -38,7 +37,7 @@ class SodiumPlus {
-      * @return {boolean}
-      */
-     isSodiumNative() {
--        return (this.backend instanceof SodiumNativeBackend);
-+        return false;
-     }
- 
-     /**
-@@ -58,14 +57,7 @@ class SodiumPlus {
-      */
-     static async auto() {
-         let backend;
--        try {
--            backend = await SodiumNativeBackend.init();
--        } catch (e) {
--            backend = await LibsodiumWrappersBackend.init();
--        }
--        if (!backend) {
--            backend = await LibsodiumWrappersBackend.init();
--        }
-+        backend = await LibsodiumWrappersBackend.init();
-         Util.populateConstants(backend);
-         return new SodiumPlus(backend);
-     }
diff --git a/lib/backend/sodiumnative.js b/lib/backend/sodiumnative.js
index 6b725d2..504e46a 100644
--- a/lib/backend/sodiumnative.js
+++ b/lib/backend/sodiumnative.js
@@ -1,11 +1,5 @@
 let loaded = false;
-let _sodium;
-try {
-    _sodium = require('sodium-native');
-    loaded = true;
-} catch (e) {
-    _sodium = {};
-}
+let _sodium = {};
 const Backend = require('../backend');
 const CryptographyKey = require('../cryptography-key');
 const SodiumError = require('../sodium-error');
diff --git a/lib/sodiumplus.js b/lib/sodiumplus.js
index 4e3d33c..e80543d 100644
--- a/lib/sodiumplus.js
+++ b/lib/sodiumplus.js
@@ -4,7 +4,6 @@ const Ed25519SecretKey = require('./keytypes/ed25519sk');
 const Ed25519PublicKey = require('./keytypes/ed25519pk');
 const LibsodiumWrappersBackend = require('./backend/libsodium-wrappers');
 const SodiumError = require('./sodium-error');
-const SodiumNativeBackend = require('./backend/sodiumnative');
 const X25519PublicKey = require('./keytypes/x25519pk');
 const X25519SecretKey = require('./keytypes/x25519sk');
 const Util = require('./util');
@@ -38,7 +37,7 @@ class SodiumPlus {
      * @return {boolean}
      */
     isSodiumNative() {
-        return (this.backend instanceof SodiumNativeBackend);
+        return false;
     }
 
     /**
@@ -57,15 +56,7 @@ class SodiumPlus {
      * @return {Promise<SodiumPlus>}
      */
     static async auto() {
-        let backend;
-        try {
-            backend = await SodiumNativeBackend.init();
-        } catch (e) {
-            backend = await LibsodiumWrappersBackend.init();
-        }
-        if (!backend) {
-            backend = await LibsodiumWrappersBackend.init();
-        }
+        let backend = await LibsodiumWrappersBackend.init();
         Util.populateConstants(backend);
         return new SodiumPlus(backend);
     }
