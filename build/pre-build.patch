diff --git a/lib/backend/sodiumnative.js b/lib/backend/sodiumnative.js
index 6b725d2..504e46a 100644
--- a/lib/backend/sodiumnative.js
+++ b/lib/backend/sodiumnative.js
@@ -1,11 +1,5 @@
 let loaded = false;
-let _sodium;
-try {
-    _sodium = require('sodium-native');
-    loaded = true;
-} catch (e) {
-    _sodium = {};
-}
+let _sodium = {};
 const Backend = require('../backend');
 const CryptographyKey = require('../cryptography-key');
 const SodiumError = require('../sodium-error');
diff --git a/lib/sodiumplus.js b/lib/sodiumplus.js
index 4e3d33c..e80543d 100644
--- a/lib/sodiumplus.js
+++ b/lib/sodiumplus.js
@@ -4,7 +4,6 @@ const Ed25519SecretKey = require('./keytypes/ed25519sk');
 const Ed25519PublicKey = require('./keytypes/ed25519pk');
 const LibsodiumWrappersBackend = require('./backend/libsodium-wrappers');
 const SodiumError = require('./sodium-error');
-const SodiumNativeBackend = require('./backend/sodiumnative');
 const X25519PublicKey = require('./keytypes/x25519pk');
 const X25519SecretKey = require('./keytypes/x25519sk');
 const Util = require('./util');
@@ -38,7 +37,7 @@ class SodiumPlus {
      * @return {boolean}
      */
     isSodiumNative() {
-        return (this.backend instanceof SodiumNativeBackend);
+        return false;
     }
 
     /**
@@ -57,15 +56,7 @@ class SodiumPlus {
      * @return {Promise<SodiumPlus>}
      */
     static async auto() {
-        let backend;
-        try {
-            backend = await SodiumNativeBackend.init();
-        } catch (e) {
-            backend = await LibsodiumWrappersBackend.init();
-        }
-        if (!backend) {
-            backend = await LibsodiumWrappersBackend.init();
-        }
+        let backend = await LibsodiumWrappersBackend.init();
         Util.populateConstants(backend);
         return new SodiumPlus(backend);
     }
