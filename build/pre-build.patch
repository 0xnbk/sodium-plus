Index: lib/backend/sodiumnative.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lib/backend/sodiumnative.js	(date 1571539832000)
+++ lib/backend/sodiumnative.js	(date 1571539892668)
@@ -1,11 +1,5 @@
 let loaded = false;
-let _sodium;
-try {
-    _sodium = require('sodium-native');
-    loaded = true;
-} catch (e) {
-    _sodium = {};
-}
+let _sodium = {};
 const Backend = require('../backend');
 const CryptographyKey = require('../cryptography-key');
 const SodiumError = require('../sodium-error');
Index: lib/sodiumplus.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lib/sodiumplus.js	(date 1571539832000)
+++ lib/sodiumplus.js	(date 1571539922485)
@@ -4,7 +4,6 @@
 const Ed25519PublicKey = require('./keytypes/ed25519pk');
 const LibsodiumWrappersBackend = require('./backend/libsodium-wrappers');
 const SodiumError = require('./sodium-error');
-const SodiumNativeBackend = require('./backend/sodiumnative');
 const X25519PublicKey = require('./keytypes/x25519pk');
 const X25519SecretKey = require('./keytypes/x25519sk');
 const Util = require('./util');
@@ -38,7 +37,7 @@
      * @return {boolean}
      */
     isSodiumNative() {
-        return (this.backend instanceof SodiumNativeBackend);
+        return false;
     }
 
     /**
@@ -58,14 +57,7 @@
      */
     static async auto() {
         let backend;
-        try {
-            backend = await SodiumNativeBackend.init();
-        } catch (e) {
-            backend = await LibsodiumWrappersBackend.init();
-        }
-        if (!backend) {
-            backend = await LibsodiumWrappersBackend.init();
-        }
+        backend = await LibsodiumWrappersBackend.init();
         Util.populateConstants(backend);
         return new SodiumPlus(backend);
     }
